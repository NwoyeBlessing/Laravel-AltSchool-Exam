---
- name: Project
  hosts: all
  become: yes
  become_user: root
  vars_files:
    - variables.yml

  tasks:
    - name: Update "apt" repository
      apt:
        update_cache: true
        autoclean: true
        autoremove: true

    - name: install file dependencies
      apt:
        name:
          - python3-pip
          - git
          - lsb-release
          - ca-certificates
          - apt-transport-https
          - software-properties-common
          - gnupg2
          - curl
          - wget
          - debconf-utils
          - libaio1

    - name: install pymysql
      shell: python3 -m pip install PyMySQL

    - name: pip install
      shell: pip install cryptography

    - name: install apache
      apt:
        name: apache2, apache2-utils

    - name: install php repo
      apt_repository:
        repo: ppa:ondrej/php

    - name: update
      apt: name={{ item }} state=latest force_apt_get=yes update_cache=yes
      loop: ['aptitude']

    - name: install php
      apt:
        name: php8.1, libapache2-mod-php8.1, php8.1-cli, php8.1-common, php8.1-mysql, php8.1-opcache, php8.1-soap, php8.1-zip, php8.1-intl, php8.1-bcmath, php8.1-xml, php8.1-xmlrpc, php8.1-curl, php8.1-gd, php8.1-imagick, php8.1-cli, php8.1-dev, php8.1-imap, php8.1-mbstring

    - name: mysql
      shell:
        debconf-set-selections <<EOF
        mysql-apt-config mysql-apt-config/select-server select mysql-8.0
        "mysql-community-server mysql-community-server/root-pass password root"
        "mysql-community-server mysql-community-server/re-root-pass password root"
        EOF

    - name: mysql app config
      shell: wget --user-agent="Mozilla" -O /tmp/mysql-apt-config_0.8.24-1_all.deb https://dev.mysql.com/get/mysql-apt-config_0.8.24-1_all.deb

    - name: mysql config
      shell: sudo DEBIAN_FRONTEND=noninteractive dpkg -i /tmp/mysql-apt-config_0.8.24-1_all.deb < /dev/null > /dev/null

    - name: update
      apt: name={{ item }} state=latest force_apt_get=yes update_cache=yes
      loop: ['aptitude']

    - name: mysql debian frontend
      shell: DEBIAN_FRONTEND=noninteractive apt-get install mysql-server mysql-client --assume-yes --force-yes < /dev/null > /dev/null
 

    - name: Ensure mySQL is running and starts on boot
      service: name=mysql state=started enabled=true

    - name: sql query
      command:  mysql -u root --execute="ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '"{{ mysql_root_password }}"';"

    - name: Create ~/.my.cnf
      file:
        path: ~/.my.cnf
        state: touch

    - name: Insert into ~/.my.cnf
      blockinfile:
        path: ~/.my.cnf
        block: |
          [client]
          user="{{ mysql_user }}"
          password="{{ mysql_root_password }}"

    - name: sql query flush
      command:  mysql -u root --execute="FLUSH PRIVILEGES"

    - name: Create a Database
      mysql_db:
        login_user: 'root'
        login_password: "{{ mysql_root_password }}"
        name: "{{ db_name }}"
        state: present

    - name: Create a Database User
      mysql_user:
        login_user: 'root'
        login_password: "{{ mysql_root_password }}"
        name: "{{ db_user }}"
        password: "{{ user_pass }}"
        host: localhost
        priv: '{{ db_name }}.*:ALL,GRANT'

    - name: Restart MySQL
      service: name=mysql state=restarted

    - name: Script to install PostgreSQL
      ansible.builtin.script: /home/ubuntu/ansible/postgres.sh
      args:
        chdir: /home/ubuntu

    - name: Clone the project repo into a new directory
      git:
        repo: https://github.com/f1amy/laravel-realworld-example-app.git
        dest: /var/www/laravel
        clone: true
        update: false

    - name: setting up .env
      copy:
        dest: /var/www/laravel/.env
        content: |
          APP_NAME="Laravel"
          APP_ENV=local
          APP_KEY=
          APP_DEBUG=true
          APP_URL=https://bleuche.online
          APP_PORT=3000
          LOG_CHANNEL=stack
          LOG_DEPRECATIONS_CHANNEL=null
          LOG_LEVEL=debug
          DB_CONNECTION=mysql
          DB_HOST=localhost
          DB_PORT=3306
          DB_DATABASE=laraveldb
          DB_USERNAME=laravel
          DB_PASSWORD=laravel
          BROADCAST_DRIVER=log
          CACHE_DRIVER=file
          FILESYSTEM_DISK=local
          QUEUE_CONNECTION=sync
          SESSION_DRIVER=file
          SESSION_LIFETIME=120
          MEMCACHED_HOST=127.0.0.1
          REDIS_HOST=127.0.0.1
          REDIS_PASSWORD=null
          REDIS_PORT=6379
          MAIL_MAILER=smtp
          MAIL_HOST=mailhog
          MAIL_PORT=1025
          MAIL_USERNAME=null
          MAIL_PASSWORD=null
          MAIL_ENCRYPTION=null
          MAIL_FROM_ADDRESS="hello@example.com"
          MAIL_FROM_NAME="${APP_NAME}"
          AWS_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY=
          AWS_DEFAULT_REGION=us-east-1
          AWS_BUCKET=
          AWS_USE_PATH_STYLE_ENDPOINT=false
          PUSHER_APP_ID=
          PUSHER_APP_KEY=
          PUSHER_APP_SECRET=
          PUSHER_APP_CLUSTER=mt1
          MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
          MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"
          L5_SWAGGER_GENERATE_ALWAYS=true
          SAIL_XDEBUG_MODE=develop,debug
          SAIL_SKIP_CHECKS=true

    - name: setting up web.php
      template:
        src: /home/ubuntu/ansible/web.php
        dest: /var/www/laravel/routes/web.php
        owner: www-data
        group: www-data
        mode: '0644'

    - name: setting up pemission for laravel
      shell: chown -R root:root /var/www/laravel
  
    - name: permission for  laravel
      shell: chmod -R 0755 /var/www/laravel

    - name: setting up pemission for storage
      shell: chmod -R 0755 /var/www/laravel/storage

    - name: setting up pemission for bootstrap
      shell: chmod -R 0755 /var/www/laravel/bootstrap/cache

    - name: setting up htaccess
      copy:
        dest: "/var/www/laravel/.htaccess"
        content: |
          <IfModule mod_rewrite.c>
            RewriteEngine On
            RewriteCond %{REQUEST_URI} !^/public/
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteRule ^(.*)$ /public/$1
            RewriteRule ^(/)?$ public/index.php [L]
          </IfModule>

    - name: installing composer
      shell: php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"

    - name: composer verification
      shell: php -r "if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"

    - name: composer setup
      shell: php composer-setup.php

    - name: composer uplink setup
      shell: php -r "unlink('composer-setup.php');"

    - name: move composer
      shell: mv composer.phar /usr/local/bin/composer

    - name: install composer
      shell: cd /var/www/laravel && composer install -n

    - name: Run php artisan key
      shell: cd /var/www/laravel && php artisan key:generate

    - name: run php artisan config
      shell: cd /var/www/laravel && php artisan config:cache

    - name: run php artisan migrate
      shell: cd /var/www/laravel && php artisan migrate:fresh 

    - name: run php artisan migrate seed
      shell: cd /var/www/laravel && php artisan migrate --seed 

    - name: setting conf file
      copy:
        dest: "/etc/apache2/sites-available/bleuche.conf"
        content: |
          <VirtualHost *:80>
              ServerAdmin email@bleuche.online
              ServerName bleuche.online
              ServerAlias www.bleuche.online
              DocumentRoot /var/www/laravel/public
              <Directory /var/www/laravel/public>
                  Options Indexes FollowSymLinks
                  AllowOverride All
                  Require all granted
              </Directory>
              ErrorLog ${APACHE_LOG_DIR}/error.log
              CustomLog ${APACHE_LOG_DIR}/access.log combined
          </VirtualHost>

    - name: Enable a2enmod rewrite
      ansible.builtin.command: a2enmod rewrite

    - name: Disable default apache page and enable laravel page
      ansible.builtin.command: a2dissite 000-default.conf

    - name: Enable laravel page
      ansible.builtin.command: a2ensite bleuche.conf

    - name: Restart apache web server
      ansible.builtin.command: systemctl restart apache2

    - name: owners previledge
      shell: chown -R www-data:www-data /var/www/laravel

    - name: install snapd
      apt:
        name:
          - snapd
    - name: install snap core
      shell: sudo snap install core

    - name: snap refresh
      shell: snap refresh core

    - name: sudo install snap certbot
      shell: sudo snap install --classic certbot

    - name: move certbot
      shell: sudo ln -s /snap/bin/certbot /usr/bin/certbot
      args:
        chdir: /usr/bin/
        creates: certbot

    - name: Requesting SSL Certificate
      shell: sudo certbot --apache --agree-tos -m bunwoye@gmail.com --non-interactive -d bleuche.online -d www.bleuche.online
